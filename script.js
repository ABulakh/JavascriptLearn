"use strict"; // Строгий режим - просмотреть полные отличия

// Разница между var и let в области видимости
let number = 2;
const leftBorder = 10;

number = 20;
console.log(number);

function test() {
  console.log('test2');
}
test();

const obj = {
  // Свойства и методы обекта
  name: "John", // свойство 1
  age: 25, // свойство 2
  isMarried: false // свойство 3
};

// console.log(obj.age);
console.log(obj['name']);

let arr = ['plum.png', 'orange.jpg', 'apple.bmp'];

console.log(arr[1]);

// --------------------- Структуры данных

/*
NaN - когда мы пытаемся из строкой работать с математическими операциями
infinity - числовое значение при делении на 0
null - Нет переменной, typeof(null) - выведет object - это официально признаная ошибка
undefined - Переменая есть но нету значения
Обект - комплексный тип данных, основная ключевая еденица в JS
Массив - это частный случай обекта, можно положить любой тип данных
Массивы нужны для того чтобы елементы были стого по порядку
*/

// --------------------- Простое взаемодействие с пользователем
/*
Только для очень важных сообщений
alert('hello world');
*/

// Если отвечаем ok - то получаем true, если отмена то false
/* const result = confirm('Ho your are');
console.log(result); */

/* Возвращает строку, все что мы получаем от пользователя,
все будет строка 
+promt - преобразование строки в число
*/
/* const msg = +prompt('Сколько вам лет?');
console.log(msg + 5);

prompt, alert, confirm - блокируют загрузку страницы пока не выполняться
*/

const answers = [];

/* answers[0] = prompt('Как ваше имя?', '');
answers[1] = prompt('Сколько вам лет?', '');
answers[2] = prompt('Вы женаты?', ''); */

console.log(typeof (answers));

/*
  Есть команды которые работают только в нутри браузера
  Document, prompt, alert, confirm и т д
*/

// --------------------- Интерполяция

const category = 'toys';

/* Конкатенация строк - старый стандарт */
console.log('https://site.com/' + category + '/5');

/* Интерполяция, удобный способ вставки переменной в строку */
console.log(`https://site.com/${category}/5`);

const user = 'Ivan';
alert(`Привет, ${user}`);


// --------------------- Операторы

/* 
  Унарный плюс, унарный минус ставиться перед аргументом
*/
/* 
Операторы инкремента и декремента
let num++; - постфиксная форма
let num--;
let ++num; - префиксная форма
let --num;

 */
/* 
  Математические операторы
  +
  -
  *
  /
  % - остаток от деления
 */
/* 
  логические операторы
  && и
  || или 
  > - больше
  < - меньше
  == - сравнение
  === - строгое сравнение по топу
 */
/* ! - оператор отрицания */
/* побитовые операторы
 */